logging:
  level:
    org:
      springframework: DEBUG
spring:
    datasource:
        url: jdbc:mysql://localhost:3306/spring_oauth?useSSL=false
        username: root
        password: mindpath

    jpa:
        show-sql: true
        hibernate:
            ddl-auto: update
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    security:
      oauth2:
        client:
          provider:
            pingFederate:
              authorization-uri: https://51.158.99.2:9031/as/authorization.oauth2
              token-uri: https://51.158.99.2:9031/as/token.oauth2
              user-info-uri: https://51.158.99.2:9031/idp/userinfo.openid
              jwk-set-uri: https://51.158.99.2:9031/pf/JWKS
              user-name-attribute: sub
          registration:
            google:
              clientId: 381800913417-3olhtfl754lj0m4f0fhatnlb6tk8fsvc.apps.googleusercontent.com
              clientSecret: CzLizG2WQQ3mqyqDUIMI5_Xa
              redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - profile
            pingFederate:
              provider: pingFederate
              clientId: pingFederateLocal
              client-name: pingFederateLocal
              clientSecret: Y5EIMK8VrmhrwHQ259Lqk62lAtEw5dUypMiLuQKcYyIwt19juiLyVAO1HUjCmyOM
              redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
              authorization-grant-type: authorization_code
              client-authentication-method: code
              scope:
                - openid
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
